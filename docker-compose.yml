version: "3"

services:
  app:
    container_name: citybike-app
    restart: always
    stdin_open: true
    build: ./app
    image: hyeink/helsinkicitybike_app
    volumes:
      - ./app/build:${PUBLIC_PATH}
    ports:
      - "4000:80"
    networks:
      - backend
      - helsinki-citybike
    env_file:
      - .env
  mongo:
    container_name: citybike-mongo
    image: mongo
    volumes:
      - ./data/mongodb:/data/db
    networks:
      - backend
      - services
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    command: mongod
  api:
    container_name: citybike-api
    restart: on-failure
    build: ./api
    image: hyeink/helsinkicitybike_api
    volumes:
      - ./api:/api
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      WAIT_HOSTS: mongo:27017
    networks:
      - backend
      - helsinki-citybike
  services:
    container_name: citybike-services
    restart: on-failure
    build: ./services
    image: hyeink/helsinkicitybike_services
    env_file:
      - .env
    environment:
      WAIT_HOSTS: mongo:27017
    volumes:
      - ./services:/services
    networks:
      - services
      - helsinki-citybike
  webserver:
    image: nginx
    container_name: webserver
    restart: unless-stopped
    tty: true
    env_file:
      - .env
    volumes:
      - ./app/build:${PUBLIC_PATH}
      - ./nginx/templates:/etc/nginx/templates
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    networks:
      - helsinki-citybike
    # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    # entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
networks:
  helsinki-citybike:
    driver: bridge
  backend:
  services: