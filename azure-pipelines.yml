# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- script: echo Hello, world! $(system.defaultworkingdirectory) and $(Agent.TempDirectory)
  displayName: 'Run a one-line script'
- task: DownloadSecureFile@1
  name: env
  inputs:
    secureFile: '.env'
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: '.env'
    TargetFolder: '$(system.defaultworkingdirectory)'
- script: cd $(system.defaultworkingdirectory) && ls -la
  displayName: 'Run a one-line script'
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Hyein(c1347830-c5cc-4bf9-b998-832739052fca)'
    azureContainerRegistry: '{"loginServer":"helsinkicitybikeacr.azurecr.io", "id" : "/subscriptions/c1347830-c5cc-4bf9-b998-832739052fca/resourceGroups/helsinki-citybike-rg/providers/Microsoft.ContainerRegistry/registries/helsinkicitybikeacr"}'
    dockerComposeFile: 'docker-compose.yml'
    action: 'Build services'
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Hyein(c1347830-c5cc-4bf9-b998-832739052fca)'
    azureContainerRegistry: '{"loginServer":"helsinkicitybikeacr.azurecr.io", "id" : "/subscriptions/c1347830-c5cc-4bf9-b998-832739052fca/resourceGroups/helsinki-citybike-rg/providers/Microsoft.ContainerRegistry/registries/helsinkicitybikeacr"}'
    dockerComposeFile: 'docker-compose.yml'
    action: 'Push services'
- task: CopyFiles@2
  inputs:
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
